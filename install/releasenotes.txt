(c) Copyright 2012 the CMS Made Simple Dev Team. All Rights Reserved.
--------------------------------------
CMSMS Version 1.11 - Galapagos
--------------------------------------
The CMSMS Dev Team is delighted to announce the official release of our next major version CMS Made Simple 1.11. There have been some significant and important changes. This release has undergone months of active, and careful development by the CMSMS Dev Team. Additionally, a very active six week public beta program resulting in more testing than in any other CMSMS release should ensure that this version the stable, fast, powerful, feature rich and easy to use content management system that you have come to expect.

So here are some of the major changes in CMSMS 1.11

Smarty 3:
---------
The biggest change in CMSMS 1.11 is that we are now using Smarty3. Smarty3 brings some new functionality for Smarty templates, such as improved parsing, which should help with embedded javascript; smarty functions; and advanced cache control.

The CMSMS Dev Team worked extensively in conjunction with the developers of Smarty to implement an unmodified version Smarty 3.1.10 into CMSMS. The important part of this transition was to retain the power of the variable scoping we have become accustomed to in CMSMS; e.g. being able to set a variable in a module template that is called from the body, and to use that variable in the page head.

CMSMS 1.11 enables Smarty caching in a very flexible way to give the power of caching all or parts of individual pages. This is almost as good as full page caching, but retains the dynamic power of CMSMS.

In 1.11, most plugins in the plugins folder are ‘cachable’, i.e., the output of those plugins can be cached on the page and not re-executed. The obvious exception being the {content*} plugins which will not cache.

The News module has also been modified to take better advantage of Smarty3’s caching capabilities, and to serve as an example for module developers.

There are some detriments to the adoption of Smarty3 however. We have noticed that the initial compilation (converting Smarty templates into PHP code) and rendering of a stock CMSMS page is noticeably slower. This performance degradation is due to the complexity of the lexer and parser in Smarty3 and is a known limitation in the library.

However, once caching is enabled, we are noticing a significant performance improvement. We feel that this trade-off will be beneficial in the long run to all users of CMSMS.

Language and locale improvements:
---------------------------------
We have rewritten the language detection and selection mechanisms into a class to allow for more flexibility. The NLS data set now contains locale and encoding information so that the $config[‘locale’] and $config[‘encoding’] information will be optional even for non-English sites.  Additionally, the behavior of these config options has changed.

We have reorganized some of the language detection mechanisms so that it is called AFTER modules (the ones that can’t lazy load) are initialized. This, in conjunction with the new CmsNlsOperations::set_language_detector() method, allows third party modules to specify how the current frontend language should be detected. Modules can then use session variables, cookies, a variable on the URL, or user or module preferences to determine what language to use for that frontend request.

The importance of this cannot be understated. This allows third party modules to create proper multi-language capabilities within CMSMS and we are sure that there are many module developers and thousands of website developers that will be extremely happy.

CSS Improvements:
-----------------
Each stylesheet can now have a media query string. This allows you to better make responsive websites, or webpages for mobile devices. As well, some new config variables will allow you to control the output directory for generated stylesheets.

New Admin Theme:
----------------
Goran Ilic, a valued member of the CMSMS Dev team, has created a new, HTML5, responsive admin theme for CMSMS that is completely Smarty controlled, and extendable. This is the new admin theme for all fresh CMSMS installs, and the old ‘default’ admin theme has been removed. This leaves the NCleanGrey and OneEleven admin themes.

The new “OneEleven” admin theme is responsive and has been tested on various tablets. Though we do not officially support using CMSMS on lower resolution smartphones such as the iphone.

New Frontend Theme:
-------------------
We are also delighted that CMSMS 1.11 comes with the new ‘Simplex’ frontend theme. Simplex Theme has been created to demonstrate HTML5 and CSS3 functionality within CMSMS. We envision slowly replacing the sample HTML4 transitional themes in the distribution with HTML5 examples. Many thanks again to Goran Ilic.

Drag and Drop Upload:
---------------------
Along with the new admin theme, we’ve upgraded the jquery and jquery.ui that is shipped with CMSMS and have added support for uploading files via drag and drop (for most non-IE browsers). This makes the file upload capabilities in wysiwyg editors all but redundant, and solves a long standing difficulty with CMSMS. The OneEleven admin theme has a dropzone in its main area, allowing you to drag files from your desktop into CMSMS and then select the file from within the wysiwyg editor. Additionally, you can change working directories from within the OneEleven admin theme.

Better Module Lazy Loading:
---------------------------
Continuing with what was started in the 1.10 series, we have improved the module lazy loading capabilities to improve performance on your websites. To that end we’ve also re-worked the routing functionality.

Improved auditing:
------------------
Audit trails are becoming more and more important in our websites (who did what, and when). For that reason, we’ve gone through all of the important pieces of functionality and ensured there’s is a line placed in the audit log for each of them.

A System Maintenance page:
--------------------------
A brand new system maintenance page in the admin interface allows you to perform periodic maintenance tasks like database repairs and optimizations, clearing the cache, etc.

Improved Content class:
-----------------------
a. As mentioned at the start of this release we have re-organized the Content class again to improve performance, and lay the foundation for some work planned in the future. To that end we’ve reworked the property classes in the base content object (the methods that retrieve the content blocks, etc). We have also marked all of the content object methods and members as public, protected, or private, as appropriate.

b. In the past, the editcontent form used regular expressions to parse the page template in order to detect the content blocks. This has changed, and we are actually now using Smarty. This improves the flexibility, and reduces the possibility for error when editing page templates. Additionally, it is now possible for content block definitions to be inserted into sub templates (i.e: via {include} or via global content blocks) which gives us much more flexibility for re-use of templates.

c. It is now possible, when adding content blocks, to specify a tab within the edit content form that should contain the content block text area.

Improvements in core modules: MenuManager:
------------------------------------------
MenuManager now has a new breadcrumbs action (and the breadcrumbs tag is now depeciated). The new breadcrumbs action allows for template customization of the appearance of breadcrumbs, and even its behaviour.

Additionally, MenuManager has a new “items” action to replace the “items=” method in previous versions. This allows naming specific page aliases and having them, and their children, in your navigation.

Improvements in core modules: News module:
The news module has gone through extensive “under the hood” modifications:

a: The news module now uses Smarty caching so that on cached pages no database queries are necessary (for summary views):

b: The news module now preloads field information for all articles displayed in a summary view to reduce the number of queries required and significantly improve performance.

c: Category information is now preloaded and cached and can be shared between summary and detail views.

Bits and pieces:
----------------
- XML Module export only exports the English version of the help and about.
- A new bulk action in listcontent for changing page ownership.
- Improved user settings pages.
- Adding a new user allows you to specify the default wysiwyg for that user.
- Custom page URLs can now include an extension.
- Removed the ‘output_compression’ config option.
- Removed the ‘process_whole_template’ config option.
- Removed the ‘use_adodb_lite’ config option.
- Removed support for Postgres.
- Removed the ‘max_upload_size’ config option.
- Removed the google_search plugin.
- Moved the {menu}, {news,} {search}, and other plugins to their respective modules.
- Some general re-organization of various admin pages.
- Dozens of bug fixes.
- Lots more.
For a much more complete list of what has changed please view the CHANGELOG.txt file in the docs directory of your beta installation.

Thanks
------
Once again, massive amounts of effort has gone into creating and testing this release, freely donated by the members of the development team and other volunteers. Special thanks to: Ronny Krijt, Rolf, René Helminsen, Jeff Bosch, Robert Campbell, Matt Hornsby, Ted Kulp, Morten Poulsen, Goran Ilic, Mark Reed, Anne-Mieke Bovelett, Tapio Löytty, John Scotcher, Ken Griffith, Jonathan Schmid and Jean-Claude Etiemble.

There were many other people that participated in a very successful beta program and we would like to thank all of them collectively. We really appreciate your dedication and thoroughness in testing to ensure that 1.11 would be a very stable, fast, and feature rich release.

---------------------------------
CMSMS Version 1.10.1 - Le Lorrain
---------------------------------
Here we are again, straight out of a major functionality release, with a new point release for a significant bunch of bug fixes.  Named 1.10.1 - Le Lorrain (pronounced one point ten point one),  We had hoped that our longer, publicbeta process would have caught most of the issues like this.  However, as they say, the road to hell is paved with good intentions.  But that is how things go.  C'est La Vie.

The prominent bugs we fixed were with respect to inactive content pages, and with respect to module functionality.  We also fixed the summarize modifier, and even a postgres compatibility issue.  As well, we added some help where it was missing, and managed to squeeze in some minor optimizations too.  Some missing help was added, and/or improved in some modules, and the translations should be much more up to date.

We encourage everybody to upgrade their website(s) to CMSMS 1.10.1 As soon as possible, as this release marks the end of support for the 1.9 series of CMSMS.  As well, there are some important bug fixes for ALL users of CMSMS 1.10.

There will be a diff package for this release, but only from CMSMS 1.10.  It is still recommended that you ensure that your modules are compatible with CMSMS 1.10.x before upgrading your production sites.  And always have a verified backup before doing any upgrades.  If you don't have a backup, there isn't much we can do to help you if things go bad, except to shake our heads.

Thanks go out to all of those that found these issues amd to the members of the dev team who have again spent many hours testing, fixing and re-testing issues.

Have fun with CMSMS 1.10.1


--------------------------------
CMSMS Version 1.10 - Martinique
--------------------------------
The dev team is proud to announce that CMSMS 1.10 (one point ten), the latest stable version of CMS Made Simple is now ready for download. This version continues the development of the 1.x series with some exciting new features that enhance the admin experience and make maintaining a site an even more efficient process. Our focus for this release has been to make CMSMS faster, lighter, and stronger.

The development team has once again contributed many hundreds of hours of their time to create, enhance and rationalize the features and systems of this version. We are confident that as we push this release out the door that all the work that has been done during the development and beta processes will make CMSMS 1.10 the best version of this software yet.

This version of the software has gone through an extensive beta process that resulted in 4 beta releases, lasting about two months. The various beta releases have been downloaded well over one thousand times by members of our community, which represents a great deal more hours of testing and contributions by our valued user community. We hope that this open beta will make CMSMS 1.10 the most stable release yet.

By far the biggest changes in this release include adding support for lazy loading of modules, dropping TinyMCE in exchange for MicroTiny, A complete revamp of the module downloading code, and exchanging the Printing module with CmsPrinting. These changes have resulted in a dramatic reduction in the download size of CMSMS 1.10.

Module Lazy Loading is a huge feature that will reduce system requirements and improve performance of your website. It means that modules that are not needed on a page will not be loaded (modules must undergo a few minor modifications to support this). Lazy loading also occurs in the admin interface. The admin navigation is cached for each user so that after the first request memory requirements are much smaller.

MicroTiny as the default WYSIWYG. MicroTiny is a faster, stripped, and trimmed down version of the tinymce editor, optimized for the functionality that is needed by content editors on a majority of sites. The full TinyMCE module will continue to be available from the module manager as a third party module.

CmsPrinting module which provides similar functionality without the bloat of the tcpdf library that proved to be used by only a small percentage of users. PDF Printing capabilities will continue to be provided by the use of a third party module.

ModuleManager (and it's partner server component ModuleRepository) have been significantly revised to use a RESTFUL interface rather than a SOAP interface (sorry for the geek talk). Which results in a dramatic reduction in memory requirements for downloading modules from our forge. Additionally, the XML parsing functionality has been rewritten to use memory more optimally, and there are functionality improvements as well. As a side benefit to this effort we were able to completely remove the nuSOAP module from our distribution.

Another huge feature for 1.10 is the new preview functionality in the News module. Here you can select a page, and a template to use for the preview. This will be huge for the sites that use the news module extensively and provide a reference so that module developers can implement similar features into their modules.

To modernize the core system and streamline we have removed a series of old elements including: the depreciated {stylesheet} plug-in, stylesheet.php and the associated preference. Sites using the old {stylesheet} plugin should continue to operate fine, however it is no longer available for new sites built with CMSMS 1.10. Similarly, the adsense plug-in and startExpandCollapse/endExpandCollapse plugins have been removed from the core.

1.10 is also now fully compatible with MySQL 5.5 which solves any database issues as your server hosts upgrade.

For ease of site and admin maintenance we have improved many features. We have reworked the installation process layout for better theme consistency. The installer itself (and the system information page) has been updated to issue warnings instead of errors for E_STRICT and E_DEPRECATED. Finally we've made modifications to the installer to better handle modules.

General enhancement of the admin interface has been a priority, starting with the login page. If you try to access an admin page when logged out, you will be auto-returned to that page upon login that's great for those times your admin times out. Failure to login correctly now issues a login failed event to allow for custom handling (email notifications maybe) of failed login events. For our international users there is now the ability to view module help in english in the event that the translated help for a module is not up to date, or not clear. Additionally, the Systeminfo page has been redesigned for better readability

The auditing system has been significantly improved, we have rewritten the interface in smarty, added filtering, and IP address tracking for actions undertaken by a logged in administrator. Additionally there are now preferences for the lifetime of the admin log so that the history doesn't grow extraordinarily large, and ensured that most significant actions in the admin interface generate audit entries to ensure that the information in the audit log is more useful.

For security we have added support for a separate admin URL that supports SSL, and added the ability to salt passwords for your admin users. As well, we have modified all cookie commands to ensure that the secure param is managed properly on SSL pages.

JavaScript support is further improved with the {cms_jquery} tag to include the jquery provided with CMSMS, and we have updated the JQuery and JQueryUI that is distributed in the core.

The {cms_stylesheet} tag has been improved to combine all stylesheets into one cached .css file by default, thus under normal circumstances reducing the number of requests to the server required by the browser to render a page. Combining stylesheets will only occur if the media types for all of the stylesheets attached to a page are identical.

There have also been a lot of improvements in content. In the page edit screen "page URL" is moved from "Options" tab to the "Main" tab. The cms_selflink tag now allows for width and height parameters when using images. The content tag now allows for a max_length parameter so it is possible to control how much content can go into any given area. The parent dropdown now optionally uses the menu text as opposed to the longer title that was showing. We have also revamped the content permission mechanisms, User Defined Tags now contain a description area just like Global content blocks, so you can include notes as to what they do. Global content blocks themselves now show the description in the summary listings for fast reference.

Along with a slew of bug fixes, we have also undertaken a number of housekeeping tasks to further improve the system and its efficiency: We have taken effort to minimize the core XXXXX.module.php files to result in less memory requirements for most actions. Version check now uses a new cms_http_request class to get past the allow_url_fopen limitation on some hosts. All distributed plugins have an assign parameter for better use in smarty. The NuSoap module has been removed as a core module.

We have also cleaned up a large amount of classes to facilitate growth, enhance security, and manage performance going forward. This includes getting rid of the last of the deprecated callbacks from the module class itself, getting rid of a number of member variables that are now redundant ($gCms->modules and the module->cms and module->smarty etc members). We have cleaned up the content classes a fair bit, and additionally ie6 relevant conditional styles and inline JS has been removed from the distribution. Unfortunately, this means that we have broken some compatibility, and may cause difficulty for people in the upgrade process.

Recommended Upgrade Procedure:
------------------------------
Users wishing to upgrade to CMSMS 1.10 should follow two similar, but different paths depending upon their sites current version of CMSMS.

** It is always important to have a backup of your site, including the database and all relative files before proceeding with an upgrade. **
If the version of CMSMS is less than 1.9.3:
a) Perform an upgrade to CMSMS 1.9.4.3 and verify that everything is working fine.
b) Backup your site again. It is always important to have a known-good-backup.

For all users upgrading to CMSMS 1.10:
c: Upgrade all modules to the latest available version.
d: Look at all of the third party plugins you have installed into your sites plugins directory and ensure that they should be compatible with CMSMS 1.10 (you may need to refer to the information below or to the forum for this).
e: Look at all of your User Defined Tags (UDT's) to insure that they should be compatible with CMSMS 1.10. See the technical information below to see what has changed.
e: Ensure that each module that your site requires is compatible with CMSMS 1.10. As some modules have needed revisions to be compatible. If your site is using some older or less used modules, you may have to contact the modules author or enquire in the CMSMS forum to see if the module is compatible.

What We Broke (Technical Stuff):
--------------------------------
1: Removing $gCms->smarty, use cmsms()->GetSmarty() instead.
In older versions of CMSMS the $gCms object contained a reference to the global smarty object. The global smarty object is now a singleton to ensure that it cannot be instantiated more than once.

2: Removed the $gCms->config, use cmsms()->GetConfig() instead.
Similar to the Smarty object, the config object is also a singleton. Therefore that method of accessing the config object has been removed.

3: Removed the $gCms->modules array. use cms_utils::get_module() instead.
The public modules array, a throwback to the days of php4 has been removed, and replaced with a complete api (see the ModuleOperations class). A simple method to obtain a module object reference has been (since CMSMS 1.9) the cms_utils::get_module() method. This may effect your UDT's the most.

4: Revised the content objects
In CMSMS 1.10, as the first step in revising our object interface for the sake of efficiency we have revised the Content object to ensure that all member variables are private and that accessors exist for each data member. The most prominent of these is the 'mModifiedDate' member of the content object, which was public but had no accessor method.

5: The CmsObject class is now final and a singleton.
In CMSMS 1.10, the CmsObject class (aka the $gCms variable) is now a final, non-extendable class.

6: Removed deprecated callbacks from the module api.
The last of the long deprecated callbacks were removed from the module class as they have been replaced by events for a long time.

7: Private, Protected, and final methods in the module API.
Our first step in the cleanup of the module API was to clean up the interfaces for this class. We have declared most methods to be public or protected. Some methods are also final and cannot be overridden. We have also deprecated the Redirect methods of the module API.

8: Replaced, but deprecated some members of the module class.
The smarty, db, and config members of the module class (which were references to the global versions of those objects) have been removed, and replaced with access methods. Though this should not break compatibility the following is now deprecated:

$this->smarty -- when $smarty is not provided to you in scope, you should use cmsms()->GetSmarty()
$this->db -- when $db not provided to you in scope, you should use cmsms()->GetDb();
$this->config -- you should use cmsms()->GetConfig();
$this->cms -- When not provided in scope, you should use $gCms = cmsms();

Thanks:
-------
As always, massive amounts of effort has gone into creating this release, freely donated by the members of the development team and other volunteers. Special thanks to:
Ronny Krijt, Rolf, Jeremy Bass, Reneh Helminsen, Jeff Bosch, Robert Campbell
John Scotcher, Ted Kulp, Samuel Goldstein, Morten Poulsen, Goran Ilic
Mark Reed, Anne-Mieke Bovelett, Keith Lauchlan and to Jean-Claude Etiemble (jce76350)

Also, The Dev Team cannot forget to thank the hundreds of members of our community that have volunteered their time to participate in the beta program to make their favorite content management system even that much better. Without their help CMSMS 1.10 would not have been as stable. Keep up the good work.


------------------------------
CMSMS Version 1.9 - Bora Bora
------------------------------
Once again the CMSMS(tm) Dev team has joined forces over hundreds or thousands of hours of effort to release yet another milestone version of CMS Made Simple(tm). This release is a feature version where we expanded the flexibility of your favorite package while maintaining its famous ease of use. We are confident that you find this version of your favorite content management system to be the best one yet.

Complete Freedom in URLs now customizable in any way preferred:
--
We have addressed some long standing concerns and wish list items with respect to URLs in this issue. There is a new URL field for each and every content page, allowing you to specify the exact URL (relative to the start of your site) for each content page. i.e: if you want the URL to be 'blah' you can do that. if you want it to be 'a/really/complex/path' you can do that too. You can have two pages that end in the same string, like: 'toronto/restaraunts' and 'calgary/restaraunts'. The site developer has complete control over the URLs for each page. Developers have the option of leaving the URL field blank, and thereby using the old page-alias method of doing things, or URLs can automatically be filled in from the page alias. To make it easier to track your URLs or see them at a glance, the listcontent page has been enhanced to show the page alias, and the page URLs. This is a huge feature and we are sure will further cement your relationship with CMSMS.

News Module allows customizing the URLs:
--
The News module has also been modified to allow customizing the URLs to the detail view on news articles. i.e: You can choose exactly what the URL will be to each news article. There is a preference as to which content page to use to display the detail view, and it will use the 'default' detail template. I am sure that this functionality will also appear in other third party modules like blog and e-commerce modules soon.

MenuManager module improved:
--
The MenuManager module has been greatly improved with an eye on performance. Since building the navigation(s) is often the most memory and time consuming portion of every page request, but page structure doesn't change that often, we've added the ability for MenuManager's output to be cached. If the page that is being generated is cacheable, and the MenuManager template that is being used is cachable, and thirdly if the 'nocache' parameter (new in CMSMS 1.9) is NOT specified, then MenuManager's output can be cached. If a cache file does not exist then one will be generated to optimize the next request. In our tests this resulted in a significant performance increase. This is another huge feature for 1.9.

The URL modifications we have made have finally allowed us to permanently resolve the 'use_hierarchy=false' issue that we have wanted to get rid of for a long time, but caused a bit of a stir in the 1.8 series. On upgrade, if you were using 'use_hierarchy=false' in the config.php all of your page aliases will be copied to the 'URL' field, thereby preserving your link structure. New preferences in site admin can control how URLs are defined for new content items.

Features, Featues and more Features:
--
We also went through our feature request list, and picked off quite a few of the items that people have asked for. Included in this are: You can now add a description to Global Content Blocks, Additionally, developers can disable the WYSIWYG editor on each individual GCB to remove the risk that it may mess up some formatting. There is also a new option to 'run' a User Defined Tag from within the admin. This allows site developers to create a UDT that maybe does some database cleanups or queries, and to run it from within the admin console rather than having to create a dummy hidden page on the sites frontend. Additionally, a new preference allows displaying either the menu text, or the page title in the content list. The sitedown functionality has been improved. now you can display a 'Site Down' message to site visitors while logged in administrators can still see the site. And due to pupular request we have improved the behavior of the {content_image} and the thumbnail and image properties of each page.  These are just a few examples of the enhancements you will find in CMSMS 1.9 Bora Bora.

jQuery Replaces script.aculo.us:
--
We've finally gotten rid of script.aculo.us and prototype (hooray) from CMS Made Simple, and replaced it with jQuery. This will make things a lot easier for module developers to do nice fancy ajaxy and javascripty things in their modules. Once we did this we were able to completely re-write the page re-ordering function. You can now order pages as you would expect, and change the parents of pages, etc. It's a fantastic benefit to using jQuery.

New Admin Theme
--
We are also concerned about presentation, and therefore the NCleanGrey admin theme has gotten an overhaul. We really like the new look of this theme, and we think you will to. Many thanks to Nuno Costa for his contributions in this area.

Optimization:
--
We also spent a great deal of time focusing on optimization. Though we are still not overly worried about a dozen lines of code here or there, we looked at the bigger picture like removing redundancies, optimizing things so that where possible data wasn't loaded from the database multiple times, etc. Particularly in the area of loading content. To that end we have new classes for managing loaded content objects, and loading them. This should result in slightly better memory utilization, and certainly better scalability.

E_STRICT and E_DEPRECATED:
--
Though we still don't officially support the E_STRICT and E_DEPRECATED error reporting levels in php we have made a lot of effort to clean up whatever errors we have found. We will endeavor to do a review of each function to try to remove E_STRICT and E_DEPRECATED errors in the future.

For security reasons, and because it is not good practice for modules, UDTs or plugins to modify internal CMSMS variables we have made some core API changes. The {$gCms} smarty variable has been removed, and it is no longer possible for third party modules to use $gCms->variables to store config data. Additionally, the configuration data is now stored in an object once loaded, and setting data at runtime into the config structure is deprecated, and that ability will be removed at a later date.

In addition to the items listed above there are dozens of other changes that have been made to the core, including removing some deprecated plugins from the release, handling the timezone setting for PHP 5.3, rework of the cms_selflink tag and more. Please read the doc/CHANGELOG.TXT for a more complete list (though it is quite technical) of what has changed.

IMPORTANT NOTE for sers that have created their own admin theme and developers of 3rd party modules: 
--
Removing script.aculo.us and using jQuery may cause difficulties for our users that have created their own admin themes. As well, there may be a few third party modules that relied on script.aculo.us, or did some non-standard things to include jQuery. Some module developers may need to release new versions of their modules because of the jQuery changes. Additionally, the changes to the core API functions and the removal of the {$gCms} smarty variable may cause problems on existing sites, and break the behaviour of some modules. As always, it is highly recommended that users make backups of sites before they upgrade, and to test this upgrade of CMSMS on a development server before upgrading your production sites.

This release had the best beta testing cycle of all of the releases. The beta testers spent many many hours installing the release, testing upgrades, spotting issues and verifying that they were fixed, and generally being a great assistance to the CMSMS$(C"b(B community. Although we did not close every single issue that was reported by the beta team, we did analyze each one for severity, and fixed what was important (especially in the days leading up to the release). Here we would like to give thanks to: alby, bertoost85, binarydesign, Dabnis, dc2, DIGI3, duketown, gdur, hexdj, janvi, jce76350, jd447, jos, lowell, milehigh, mww, NaN, Nullig, Peciura, pedes, seensite, Sonya, Stikki, uniqu3 and vilkis.

The CMSMS Dev team has once again come together in a unified effort, and contributed hundreds of improvements to CMS Made Simple.  We have focused on ensuring stability, consistency, security, performance and presentation. Please give special thanks to your Dev Team:

    * Ted Kulp - CMSMS Project Founder
    * Robert Campbell (calguy1000) - Project Manager / Development
    * Samuel Goldstein (SjG) - Development Morten
    * Poulsen (Silmarillion) - Development
    * Ronny Krijt (RonnyK) - QA Team Lead
    * Jeremy Bass - QA Team
    * Rolf - QA Team
    * Reneh Helminsen (reneh) - Translation Team Lead
    * Mark Reed (DrCss) - Support Team
    * Lead Jeff Bosch (ajprog) - Support Team
    * Anne-Mieke Bovelett (CompuFairy) - Marketing Team Lead
    * Keith Lauchlan (Utter) - Marketing Team Member
    * Bruce Marable - Marketing Team Member

------------------------------
CMSMS Version 1.8 - Madagascar
------------------------------

Onwards and upwards we go. The dev team is proud to announce the latest version of your favorite content management system.  This version is primarily aimed at rounding out some of the rough edges that our primary audience (experienced, professional web developers) have experienced with CMS Made Simple. There are a number of new features to enhance performance not only of the website itself, but to make doing some mundane tasks faster and easier. As well, we've added some power for the contributing programmers, and fixed quite a few nagging bugs. We will now have a lot more to talk about at the GeekMoot in Amsterdam this September.

The development team, and our beta testers have contributed countless hours in testing each and every change under as many different environments as possible. They've found a lot of issues, and tested each and every fix.

We've deprecated the {stylesheet} tag in favor of a {cms_stylesheet} tag.  The replacement works by grabbing the content of the individual style sheets and passing them through smarty before writing them to uniquely named files in the tmp/cache directory. This is a huge feature. Processing the style sheets (individually) through smarty means that you will no longer have to search through each of the style sheets for individual colors, you can give them names. There are a lot of other cool possibilities as well.  Additionally, developers can now be confident that browsers will be able to cache the style sheets properly to improve performance, and to reduce bandwidth. There is however a trade off. Because the style sheets are stored in the tmp/cache directory, the relative directory of the style sheets is not the same, users should use the [[root_url]] smarty tag in their style sheets to force absolute references to images that are specified in style sheets.

We've added the ability to bulk-copy pages. This means that if you have a page structure that you want to duplicate it becomes much easier. This is a big time saver for people who have multiple similarly structured groups of pages.

There's a new {content_module} tag that allows modules to provide different types of content blocks for use in Content pages. This is a huge feature, it means that a module developer could write a specific type of content block to provide specific type of content, and that content is stored with the page, not with the module (so copying the page will still work etc). Currently the CGContentUtils and Uploads modules support the {content_module} tag, but soon enough more modules will support it.

Our half-baked attempt at getting SSL support built into CMSMS was re-visited. We've fixed the {stylesheet}/ and {metadata} tags, and made other improvements to ensure that once you've specified that a page is secure, all of the CMSMS generated URLS are secure.

We've gone through the libraries and cleaned a bunch of unused code, and updated the documentation (the api doc stuff will be regenerated shortly after the release of CMSMS). This should help all of the budding module authors out there, however we still think that looking at a clean, well working module as a reference is the best way to learn how to do things. The API doc will only tell you what functions are available and what parameters they take, but not necessarily the context they should be used in.

We have also removed some of the very old, long deprecated callback methods from the module API. We now require that developers use the equivalent events that replaced them when events were introduced. These callbacks have been deprecated for a long time so therefore should not break any modules. However, if you are using some modules that haven't been maintained for a long time...

We've also cleaned up the language stuff a bit. This should provide a modest performance improvement in the front-end, and in the admin.

Module Manager has gotten a lot of attention in this release. We've listened, and now it should be much easier to install or upgrade modules, including all of their dependencies.

There are a lot of bug fixes, some of them related to stuff introduced in 1.7.x, and some very old ones. We hope that CMSMS 1.8 will be a very stable release. Please note that because the database schema has changed, and the upgrade procedure must be followed, there will be no diff packages in this release.

There have been hundreds of hours of development, testing, and documentation effort put into this release, proving once again that the CMSMS user community is active, strong, and cooperative. We would like to give a big thanks to the following users:

Ted (The Benevolent Dictator)
calguy1000 (Project Manager)
RonnyK (leader of the QA Project)
reneh (leader of the translation team)
Rolf
DrCSS
JeremyBass
Nuno
tyman00
_SjG_
Utter
ajprog
Nullig
Peciura
jce76350
Duketown


----------------------------
CMSMS Version 1.7.1 - Escade
----------------------------

This version of CMSMS fixes numerous minor bugs and adds some important features.  We didn't feel that the list of changes were extensive enough to call it 1.8 even though we attempted to attack as many issues that would have the biggest bang for the least bucks as possible.  That meant we tackled changes that were probably easy to implement, had smaller impacts on existing sites but would make things alot easier for our user base.

One of the biggest things this version adds is better support for SSL.  There is now an (optional) ssl_url parameter in the config.php and a checkbox in each edit content page to turn on HTTPS support on an individual page basis.  This was a long time coming.

We tweaked the module API so that any form element created by a module (form tag, text input, checkbox etc) has classes associated with the tag.  This will make it much easier for designers to style forms.

We have also added preferences to control the default imagemanager thumbnail size instead of having to edit a config file.  There are new user preferences to aide in pagination for GCB, stylesheet, and template lists. As well, the core modules have had minor tweaks and bug fixes to generally solve a few problems and make life just a little bit simpler.  TinyMCE has been upgraded to the latest version again (hopefully we'll avoid the normal pain with upgrading and TinyMCE this time).

There has been a schema change this version to accomodate the SSL changes so no diff releases will be generated.  You will need to go through the upgrade process on each site.

Again, we would like to thank the people that contributed to this release with countless hours of testing, bug reporting, translation and support.  In particular:
    Ronny Krijt (ronnyk)
    Nuno Costa (nuno)
    Rene Helminsen (reneh)
    Jeremy Bass (JeremyBass)
    Tyler Boespflug (tyman00)
    Mark Reed (DrCss)

Enjoy, and happy CMSMS'ing!
